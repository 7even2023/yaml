esphome:
  name: esphome-az32
  friendly_name: esphome-az32

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "oBzs0ZrpEtgbvwPzAeNRQX6RVfSAysnz1ijfx5hrV9I="

ota:
  password: "d74791a849e532fb40d13dba34658b29"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome-Az32 Fallback Hotspot"
    password: "aaJnskK6Dviq"

captive_portal:

# Example configuration entry DHT 11 sensor https://esphome.io/components/sensor/dht.html?highlight=dht d2 auf D4=gpio4 ch0 TXD1GPIO2  esphome-az32.yaml

sensor:
  - platform: dht
    pin: GPIO 4
    temperature:
      name: "Temperature Sensor Living Room "
    humidity:
      name: "Humidity Sensor Living Room "
    update_interval: 60s


# Example configuration entry ultraschall https://esphome.io/components/sensor/ultrasonic.html?highlight=ultrasonic !! # weg sensor:  d1 und d2 auf D6=gpio19=miso=trig D7=gpio23=mosi=echo      !!ge√§ndert  interwall 20s

  - platform: ultrasonic
    trigger_pin: GPIO 19
    echo_pin: GPIO 23
    name: "Ultraschall Sensor Living Room "
    update_interval: 20s

switch:
  - platform: gpio
    pin: GPIO15
    id: pin15
    name: "Relais1"
    on_turn_on:
      then:
          - text_sensor.template.publish:
              id: template_text1
              state: "Relais1 ein"
    on_turn_off:
      then:
          - text_sensor.template.publish:
              id: template_text1
              state: "Relais1 aus"

  - platform: gpio
    pin: GPIO16
    id: pin16
    name: "Relais2"
    on_turn_on:
      then:
          - text_sensor.template.publish:
              id: template_text2
              state: "Relais2 ein"
    on_turn_off:
      then:
          - text_sensor.template.publish:
              id: template_text2
              state: "Relais2 aus"

  - platform: gpio
    pin: GPIO17
    id: pin17
    name: "Relais3"
    on_turn_on:
      then:
          - text_sensor.template.publish:
              id: template_text3
              state: "Relais3 ein"
    on_turn_off:
      then:
          - text_sensor.template.publish:
              id: template_text3
              state: "Relais3 aus"

  - platform: gpio
    pin: GPIO18
    id: pin18
    name: "Relais4"
    on_turn_on:
      then:
          - text_sensor.template.publish:
              id: template_text4
              state: "Relais4 ein"
    on_turn_off:
      then:
          - text_sensor.template.publish:
              id: template_text4
              state: "Relais4 aus"


text_sensor:
  - platform: template
    name: "Template Text Sensor1"
    lambda: |-
      if (!id(pin15).state) {
         return {"Relais1 ist aus"};
      } else {
         return {"Relais1 ist ein"};
      }
    id: template_text1
    update_interval: 60s

  - platform: template
    name: "Template Text Sensor2"
    lambda: |-
      if (!id(pin16).state) {
         return {"Relais2 ist aus"};
      } else {
         return {"Relais2 ist ein"};
      }
    id: template_text2
    update_interval: 60s

  - platform: template
    name: "Template Text Sensor3"
    lambda: |-
      if (!id(pin17).state) {
         return {"Relais3 ist aus"};
      } else {
         return {"Relais3 ist ein"};
      }
    id: template_text3
    update_interval: 60s

  - platform: template
    name: "Template Text Sensor4"
    lambda: |-
      if (!id(pin18).state) {
         return {"Relais4 ist aus"};
      } else {
         return {"Relais4 ist ein"};
      }
    id: template_text4
    update_interval: 60s
